{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antho\\\\cs203\\\\cs203\\\\src\\\\components\\\\timesheetlist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimeSheetList = () => {\n  _s();\n  const [timeSheets, setTimeSheets] = useState([]);\n  const [error, setError] = useState('');\n  const fetchTimeSheets = async () => {\n    try {\n      const response = await axios.get('/api/timesheets');\n      setTimeSheets(response.data);\n      setError(''); // Clear error if the fetch is successful\n    } catch (error) {\n      console.error('Error fetching time sheets:', error);\n      setError('Error fetching time sheets. Please try again later.');\n    }\n  };\n  useEffect(() => {\n    fetchTimeSheets();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Time Sheet List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: timeSheets.length > 0 ? timeSheets.map(timeSheet => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Job ID: \", timeSheet.jobId, \" - Employee ID: \", timeSheet.employeeId, \" - Date: \", timeSheet.date, \" - Hours: \", timeSheet.hoursWorked, \" - Notes: \", timeSheet.notes]\n      }, timeSheet._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No time sheets available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(TimeSheetList, \"TnX6WCmU/TP8tAgZ+zqf14Ur1fE=\");\n_c = TimeSheetList;\nexport default TimeSheetList;\nvar _c;\n$RefreshReg$(_c, \"TimeSheetList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","TimeSheetList","_s","timeSheets","setTimeSheets","error","setError","fetchTimeSheets","response","get","data","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","timeSheet","jobId","employeeId","date","hoursWorked","notes","_id","_c","$RefreshReg$"],"sources":["C:/Users/antho/cs203/cs203/src/components/timesheetlist.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TimeSheetList = () => {\r\n    const [timeSheets, setTimeSheets] = useState([]);\r\n    const [error, setError] = useState('');\r\n\r\n    const fetchTimeSheets = async () => {\r\n        try {\r\n            const response = await axios.get('/api/timesheets');\r\n            setTimeSheets(response.data);\r\n            setError(''); // Clear error if the fetch is successful\r\n        } catch (error) {\r\n            console.error('Error fetching time sheets:', error);\r\n            setError('Error fetching time sheets. Please try again later.');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchTimeSheets();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Time Sheet List</h2>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            <ul>\r\n                {timeSheets.length > 0 ? (\r\n                    timeSheets.map((timeSheet) => (\r\n                        <li key={timeSheet._id}>\r\n                            Job ID: {timeSheet.jobId} - Employee ID: {timeSheet.employeeId} - Date: {timeSheet.date} - Hours: {timeSheet.hoursWorked} - Notes: {timeSheet.notes}\r\n                        </li>\r\n                    ))\r\n                ) : (\r\n                    <p>No time sheets available.</p>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TimeSheetList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,iBAAiB,CAAC;MACnDL,aAAa,CAACI,QAAQ,CAACE,IAAI,CAAC;MAC5BJ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOD,KAAK,EAAE;MACZM,OAAO,CAACN,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDC,QAAQ,CAAC,qDAAqD,CAAC;IACnE;EACJ,CAAC;EAEDV,SAAS,CAAC,MAAM;IACZW,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBX,KAAK,iBAAIL,OAAA;MAAGiB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEP;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDhB,OAAA;MAAAY,QAAA,EACKT,UAAU,CAACgB,MAAM,GAAG,CAAC,GAClBhB,UAAU,CAACiB,GAAG,CAAEC,SAAS,iBACrBrB,OAAA;QAAAY,QAAA,GAAwB,UACZ,EAACS,SAAS,CAACC,KAAK,EAAC,kBAAgB,EAACD,SAAS,CAACE,UAAU,EAAC,WAAS,EAACF,SAAS,CAACG,IAAI,EAAC,YAAU,EAACH,SAAS,CAACI,WAAW,EAAC,YAAU,EAACJ,SAAS,CAACK,KAAK;MAAA,GAD9IL,SAAS,CAACM,GAAG;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAElB,CACP,CAAC,gBAEFhB,OAAA;QAAAY,QAAA,EAAG;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAClC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACd,EAAA,CApCID,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AAsCnB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}