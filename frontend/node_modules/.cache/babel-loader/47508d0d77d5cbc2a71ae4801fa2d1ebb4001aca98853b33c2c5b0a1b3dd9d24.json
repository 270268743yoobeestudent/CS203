{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antho\\\\cs203\\\\frontend\\\\src\\\\pages\\\\ViewInvoices.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewInvoices = () => {\n  _s();\n  const [invoices, setInvoices] = useState([]);\n  const [quotes, setQuotes] = useState([]);\n  useEffect(() => {\n    const fetchInvoices = async () => {\n      try {\n        const invoiceResponse = await axios.get('http://localhost:4000/api/invoices');\n        const quoteResponse = await axios.get('http://localhost:4000/api/quotes');\n        setInvoices(invoiceResponse.data);\n        setQuotes(quoteResponse.data);\n        console.log('Fetched Invoices:', invoiceResponse.data);\n        console.log('Fetched Quotes:', quoteResponse.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchInvoices();\n  }, []);\n  const getQuoteName = quoteId => {\n    const quote = quotes.find(q => q._id === quoteId);\n    return quote ? quote.title : 'Unknown';\n  };\n  const deleteInvoice = async id => {\n    try {\n      await axios.delete(`http://localhost:4000/api/invoices/${id}`);\n      setInvoices(invoices.filter(invoice => invoice._id !== id));\n    } catch (error) {\n      console.error('Error deleting invoice:', error);\n    }\n  };\n  const editInvoice = id => {\n    window.location.href = `/invoices/edit/${id}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Existing Invoices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: invoices.map(invoice => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Invoice: \", getQuoteName(invoice.quoteId), \" - Amount Due: \", invoice.amountDue, \" - Status: \", invoice.status, \" - Due Date: \", new Date(invoice.dueDate).toLocaleDateString(), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => editInvoice(invoice._id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteInvoice(invoice._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, invoice._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewInvoices, \"bYOo2IefDN42Nt/Zy75nGOpWZ7E=\");\n_c = ViewInvoices;\nexport default ViewInvoices;\nvar _c;\n$RefreshReg$(_c, \"ViewInvoices\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ViewInvoices","_s","invoices","setInvoices","quotes","setQuotes","fetchInvoices","invoiceResponse","get","quoteResponse","data","console","log","error","getQuoteName","quoteId","quote","find","q","_id","title","deleteInvoice","id","delete","filter","invoice","editInvoice","window","location","href","children","fileName","_jsxFileName","lineNumber","columnNumber","map","amountDue","status","Date","dueDate","toLocaleDateString","onClick","_c","$RefreshReg$"],"sources":["C:/Users/antho/cs203/frontend/src/pages/ViewInvoices.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ViewInvoices = () => {\r\n  const [invoices, setInvoices] = useState([]);\r\n  const [quotes, setQuotes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchInvoices = async () => {\r\n      try {\r\n        const invoiceResponse = await axios.get('http://localhost:4000/api/invoices');\r\n        const quoteResponse = await axios.get('http://localhost:4000/api/quotes');\r\n        setInvoices(invoiceResponse.data);\r\n        setQuotes(quoteResponse.data);\r\n        console.log('Fetched Invoices:', invoiceResponse.data);\r\n        console.log('Fetched Quotes:', quoteResponse.data);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n    fetchInvoices();\r\n  }, []);\r\n\r\n  const getQuoteName = (quoteId) => {\r\n    const quote = quotes.find(q => q._id === quoteId);\r\n    return quote ? quote.title : 'Unknown';\r\n  };\r\n\r\n  const deleteInvoice = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:4000/api/invoices/${id}`);\r\n      setInvoices(invoices.filter(invoice => invoice._id !== id));\r\n    } catch (error) {\r\n      console.error('Error deleting invoice:', error);\r\n    }\r\n  };\r\n\r\n  const editInvoice = (id) => {\r\n    window.location.href = `/invoices/edit/${id}`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Existing Invoices</h1>\r\n      <ul>\r\n        {invoices.map(invoice => (\r\n          <li key={invoice._id}>\r\n            Invoice: {getQuoteName(invoice.quoteId)} - Amount Due: {invoice.amountDue} - Status: {invoice.status} - Due Date: {new Date(invoice.dueDate).toLocaleDateString()}\r\n            <button onClick={() => editInvoice(invoice._id)}>Edit</button>\r\n            <button onClick={() => deleteInvoice(invoice._id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewInvoices;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}