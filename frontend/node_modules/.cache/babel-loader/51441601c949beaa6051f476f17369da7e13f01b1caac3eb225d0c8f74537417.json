{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const QuoteList=()=>{const[quotes,setQuotes]=useState([]);const fetchQuotes=async()=>{try{const response=await axios.get('/api/quotes');console.log('Fetched quotes:',response.data);// Debug log\nsetQuotes(response.data);}catch(error){console.error('Error fetching quotes:',error);}};useEffect(()=>{fetchQuotes();},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Quote List\"}),quotes.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No quotes available.\"}):/*#__PURE__*/_jsx(\"ul\",{children:quotes.map(quote=>/*#__PURE__*/_jsxs(\"li\",{children:[\"Job: \",quote.jobTitle,\" - Client: \",quote.client,\" - Material Costs: $\",quote.materialCosts,\" - Labour Costs: $\",quote.labourCosts]},quote._id))})]});};export default QuoteList;","map":{"version":3,"names":["React","useEffect","useState","axios","jsx","_jsx","jsxs","_jsxs","QuoteList","quotes","setQuotes","fetchQuotes","response","get","console","log","data","error","children","length","map","quote","jobTitle","client","materialCosts","labourCosts","_id"],"sources":["C:/Users/antho/cs203/src/components/quotelist.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst QuoteList = () => {\r\n    const [quotes, setQuotes] = useState([]);\r\n\r\n    const fetchQuotes = async () => {\r\n        try {\r\n            const response = await axios.get('/api/quotes');\r\n            console.log('Fetched quotes:', response.data); // Debug log\r\n            setQuotes(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching quotes:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchQuotes();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Quote List</h2>\r\n            {quotes.length === 0 ? (\r\n                <p>No quotes available.</p>\r\n            ) : (\r\n                <ul>\r\n                    {quotes.map((quote) => (\r\n                        <li key={quote._id}>\r\n                            Job: {quote.jobTitle} - Client: {quote.client} - Material Costs: ${quote.materialCosts} - Labour Costs: ${quote.labourCosts}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuoteList;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACpB,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAExC,KAAM,CAAAS,WAAW,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAT,KAAK,CAACU,GAAG,CAAC,aAAa,CAAC,CAC/CC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEH,QAAQ,CAACI,IAAI,CAAC,CAAE;AAC/CN,SAAS,CAACE,QAAQ,CAACI,IAAI,CAAC,CAC5B,CAAE,MAAOC,KAAK,CAAE,CACZH,OAAO,CAACG,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAClD,CACJ,CAAC,CAEDhB,SAAS,CAAC,IAAM,CACZU,WAAW,CAAC,CAAC,CACjB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACIJ,KAAA,QAAAW,QAAA,eACIb,IAAA,OAAAa,QAAA,CAAI,YAAU,CAAI,CAAC,CAClBT,MAAM,CAACU,MAAM,GAAK,CAAC,cAChBd,IAAA,MAAAa,QAAA,CAAG,sBAAoB,CAAG,CAAC,cAE3Bb,IAAA,OAAAa,QAAA,CACKT,MAAM,CAACW,GAAG,CAAEC,KAAK,eACdd,KAAA,OAAAW,QAAA,EAAoB,OACX,CAACG,KAAK,CAACC,QAAQ,CAAC,aAAW,CAACD,KAAK,CAACE,MAAM,CAAC,sBAAoB,CAACF,KAAK,CAACG,aAAa,CAAC,oBAAkB,CAACH,KAAK,CAACI,WAAW,GADtHJ,KAAK,CAACK,GAEX,CACP,CAAC,CACF,CACP,EACA,CAAC,CAEd,CAAC,CAED,cAAe,CAAAlB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}