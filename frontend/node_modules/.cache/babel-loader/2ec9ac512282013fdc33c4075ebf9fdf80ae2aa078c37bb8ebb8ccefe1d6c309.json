{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antho\\\\cs203\\\\src\\\\components\\\\jobform.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobForm = () => {\n  _s();\n  const [jobTitle, setJobTitle] = useState('');\n  const [client, setClient] = useState('');\n  const [estimatedDuration, setEstimatedDuration] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [loading, setLoading] = useState(false); // Loading state\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"Form submitted\", {\n      jobTitle,\n      client,\n      estimatedDuration\n    });\n\n    // Validation\n    if (!jobTitle || !client || !estimatedDuration || isNaN(estimatedDuration)) {\n      setError('All fields are required and duration must be a number');\n      setSuccess('');\n      return;\n    }\n    setError('');\n    setLoading(true); // Start loading\n\n    try {\n      await axios.post('/api/jobs', {\n        jobTitle,\n        client,\n        estimatedDuration\n      });\n      setSuccess('Job added successfully!');\n      setJobTitle('');\n      setClient('');\n      setEstimatedDuration('');\n    } catch (error) {\n      setError('Error adding job. Please try again.');\n      setSuccess('');\n    } finally {\n      setLoading(false); // End loading\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"job-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"jobTitle\",\n        children: \"Job Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"jobTitle\",\n        value: jobTitle,\n        onChange: e => setJobTitle(e.target.value),\n        className: error && !jobTitle ? 'error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"client\",\n        children: \"Client:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"client\",\n        value: client,\n        onChange: e => setClient(e.target.value),\n        className: error && !client ? 'error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"estimatedDuration\",\n        children: \"Estimated Duration:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"estimatedDuration\",\n        value: estimatedDuration,\n        onChange: e => setEstimatedDuration(e.target.value),\n        className: error && (isNaN(estimatedDuration) || !estimatedDuration) ? 'error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 27\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'green'\n        },\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button\",\n        disabled: loading,\n        children: loading ? 'Adding...' : 'Add Job'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(JobForm, \"H/CTM0eeVThHM1D6kZcYTW2a3Us=\");\n_c = JobForm;\nexport default JobForm;\nvar _c;\n$RefreshReg$(_c, \"JobForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","JobForm","_s","jobTitle","setJobTitle","client","setClient","estimatedDuration","setEstimatedDuration","error","setError","success","setSuccess","loading","setLoading","handleSubmit","e","preventDefault","console","log","isNaN","post","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","style","color","disabled","_c","$RefreshReg$"],"sources":["C:/Users/antho/cs203/src/components/jobform.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst JobForm = () => {\r\n    const [jobTitle, setJobTitle] = useState('');\r\n    const [client, setClient] = useState('');\r\n    const [estimatedDuration, setEstimatedDuration] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n    const [loading, setLoading] = useState(false); // Loading state\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        console.log(\"Form submitted\", { jobTitle, client, estimatedDuration });\r\n\r\n        // Validation\r\n        if (!jobTitle || !client || !estimatedDuration || isNaN(estimatedDuration)) {\r\n            setError('All fields are required and duration must be a number');\r\n            setSuccess('');\r\n            return;\r\n        }\r\n\r\n        setError('');\r\n        setLoading(true); // Start loading\r\n\r\n        try {\r\n            await axios.post('/api/jobs', {\r\n                jobTitle,\r\n                client,\r\n                estimatedDuration,\r\n            });\r\n            setSuccess('Job added successfully!');\r\n            setJobTitle('');\r\n            setClient('');\r\n            setEstimatedDuration('');\r\n        } catch (error) {\r\n            setError('Error adding job. Please try again.');\r\n            setSuccess('');\r\n        } finally {\r\n            setLoading(false); // End loading\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form onSubmit={handleSubmit} className=\"job-form\">\r\n                <label htmlFor=\"jobTitle\">Job Title:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"jobTitle\"\r\n                    value={jobTitle}\r\n                    onChange={(e) => setJobTitle(e.target.value)}\r\n                    className={error && !jobTitle ? 'error' : ''}\r\n                />\r\n                <label htmlFor=\"client\">Client:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"client\"\r\n                    value={client}\r\n                    onChange={(e) => setClient(e.target.value)}\r\n                    className={error && !client ? 'error' : ''}\r\n                />\r\n                <label htmlFor=\"estimatedDuration\">Estimated Duration:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"estimatedDuration\"\r\n                    value={estimatedDuration}\r\n                    onChange={(e) => setEstimatedDuration(e.target.value)}\r\n                    className={error && (isNaN(estimatedDuration) || !estimatedDuration) ? 'error' : ''}\r\n                />\r\n                {error && <p style={{ color: 'red' }}>{error}</p>}\r\n                {success && <p style={{ color: 'green' }}>{success}</p>}\r\n                <button type=\"submit\" className=\"button\" disabled={loading}>\r\n                    {loading ? 'Adding...' : 'Add Job'}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JobForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}