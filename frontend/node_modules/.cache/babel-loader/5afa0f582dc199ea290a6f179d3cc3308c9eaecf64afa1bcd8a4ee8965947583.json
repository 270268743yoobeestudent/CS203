{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antho\\\\cs203\\\\frontend\\\\src\\\\pages\\\\jobs.js\",\n  _s = $RefreshSig$();\n// src/pages/Jobs.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Jobs = () => {\n  _s();\n  // State variables for the form fields\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [client, setClient] = useState('');\n  const [status, setStatus] = useState('Pending');\n  const [dueDate, setDueDate] = useState('');\n  const [assignedTo, setAssignedTo] = useState('');\n\n  // Handle form submission\n  const handleSubmit = event => {\n    event.preventDefault(); // Prevent default form submission\n\n    // Create job data object\n    const jobData = {\n      title,\n      description,\n      client,\n      status,\n      dueDate,\n      assignedTo\n    };\n\n    // Make API call to create a job\n    axios.post('http://localhost:3000/api/jobs', jobData).then(response => {\n      console.log('Job created:', response.data);\n      // Optionally reset form fields or show a success message\n      setTitle('');\n      setDescription('');\n      setClient('');\n      setStatus('Pending');\n      setDueDate('');\n      setAssignedTo('');\n    }).catch(error => {\n      console.error('Error creating job:', error);\n      // Optionally show an error message\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Job Title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Description\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: client,\n        onChange: e => setClient(e.target.value),\n        placeholder: \"Client\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(Jobs, \"+XRyKOdZlgNFXgGHwX6qj5OhOKI=\");\n_c = Jobs;\nexport default Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Jobs","_s","title","setTitle","description","setDescription","client","setClient","status","setStatus","dueDate","setDueDate","assignedTo","setAssignedTo","handleSubmit","event","preventDefault","jobData","post","then","response","console","log","data","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/antho/cs203/frontend/src/pages/jobs.js"],"sourcesContent":["// src/pages/Jobs.js\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Jobs = () => {\r\n    // State variables for the form fields\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [client, setClient] = useState('');\r\n    const [status, setStatus] = useState('Pending');\r\n    const [dueDate, setDueDate] = useState('');\r\n    const [assignedTo, setAssignedTo] = useState('');\r\n\r\n    // Handle form submission\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault(); // Prevent default form submission\r\n\r\n        // Create job data object\r\n        const jobData = {\r\n            title,\r\n            description,\r\n            client,\r\n            status,\r\n            dueDate,\r\n            assignedTo,\r\n        };\r\n\r\n        // Make API call to create a job\r\n        axios.post('http://localhost:3000/api/jobs', jobData)\r\n            .then(response => {\r\n                console.log('Job created:', response.data);\r\n                // Optionally reset form fields or show a success message\r\n                setTitle('');\r\n                setDescription('');\r\n                setClient('');\r\n                setStatus('Pending');\r\n                setDueDate('');\r\n                setAssignedTo('');\r\n            })\r\n            .catch(error => {\r\n                console.error('Error creating job:', error);\r\n                // Optionally show an error message\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Create Job</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    placeholder=\"Job Title\"\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                    placeholder=\"Description\"\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    value={client}\r\n                    onChange={(e) => setClient(e.target.value)}\r\n                    placeholder=\"Client\"\r\n                    required\r\n                />\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Jobs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}