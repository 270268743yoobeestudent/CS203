{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antho\\\\cs203\\\\cs203\\\\src\\\\components\\\\quotelist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuoteList = () => {\n  _s();\n  const [quotes, setQuotes] = useState([]);\n  const fetchQuotes = async () => {\n    try {\n      const response = await axios.get('/api/quotes');\n      console.log('Fetched quotes:', response.data); // Debug log\n      setQuotes(response.data);\n    } catch (error) {\n      console.error('Error fetching quotes:', error);\n    }\n  };\n  useEffect(() => {\n    fetchQuotes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Quote List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), quotes.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quotes available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: quotes.map(quote => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Job: \", quote.jobTitle, \" - Client: \", quote.client, \" - Material Costs: $\", quote.materialCosts, \" - Labour Costs: $\", quote.labourCosts]\n      }, quote._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(QuoteList, \"SUU9YDCVpUtZ6H24bwM60eqca2E=\");\n_c = QuoteList;\nexport default QuoteList;\nvar _c;\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","QuoteList","_s","quotes","setQuotes","fetchQuotes","response","get","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","quote","jobTitle","client","materialCosts","labourCosts","_id","_c","$RefreshReg$"],"sources":["C:/Users/antho/cs203/cs203/src/components/quotelist.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst QuoteList = () => {\r\n    const [quotes, setQuotes] = useState([]);\r\n\r\n    const fetchQuotes = async () => {\r\n        try {\r\n            const response = await axios.get('/api/quotes');\r\n            console.log('Fetched quotes:', response.data); // Debug log\r\n            setQuotes(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching quotes:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchQuotes();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Quote List</h2>\r\n            {quotes.length === 0 ? (\r\n                <p>No quotes available.</p>\r\n            ) : (\r\n                <ul>\r\n                    {quotes.map((quote) => (\r\n                        <li key={quote._id}>\r\n                            Job: {quote.jobTitle} - Client: {quote.client} - Material Costs: ${quote.materialCosts} - Labour Costs: ${quote.labourCosts}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuoteList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,aAAa,CAAC;MAC/CC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;MAC/CN,SAAS,CAACE,QAAQ,CAACI,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAEDf,SAAS,CAAC,MAAM;IACZS,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBb,MAAM,CAACc,MAAM,KAAK,CAAC,gBAChBjB,OAAA;MAAAY,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE3BhB,OAAA;MAAAY,QAAA,EACKT,MAAM,CAACe,GAAG,CAAEC,KAAK,iBACdnB,OAAA;QAAAY,QAAA,GAAoB,OACX,EAACO,KAAK,CAACC,QAAQ,EAAC,aAAW,EAACD,KAAK,CAACE,MAAM,EAAC,sBAAoB,EAACF,KAAK,CAACG,aAAa,EAAC,oBAAkB,EAACH,KAAK,CAACI,WAAW;MAAA,GADtHJ,KAAK,CAACK,GAAG;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACd,EAAA,CAjCID,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AAmCf,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}